@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<State>

@{
    ViewData["Title"] = "Index";
}

<div>
    <partial name="../Shared/_Header.cshtml" />
</div>

<div class="container">
    <div class="row justify-content-center">
        <div>
            <h3 class="text-light">States</h3>
            <p>
                <a href="@Url.Action("AddState", "States")" class="btn btn-primary">
                    <i class="fa fa-plus"></i>
                    <span>Add State</span>
                </a>
            </p>
            <br />

            @if (@ViewBag.Count > 0)
            {
                <div style="overflow-x:auto;" class="table-responsive">
                    <table class="table table-striped table-dark text-center">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(state=> state.First().StateName)</th>
                                <th>@Html.DisplayNameFor(state=> state.First().Country.CountryName)</th>
                                <th>@Html.DisplayNameFor(state=> state.First().CreatedDate)</th>
                                <th>Action(s)</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var state in Model)
                            {
                                <tr>
                                    <td>@state.StateName</td>
                                    <td>@state.Country?.CountryName</td>
                                    <td>@TimeZoneInfo.ConvertTimeFromUtc(@state.CreatedDate,TimeZoneInfo.FindSystemTimeZoneById(TimeZoneInfo.Local.StandardName)).ToString("dd/MM/yyyy hh:mm:tt")</td>
                                    <td>
                                        <a href="@Url.Action("GetState", "States",new {stateId=state.StateId})" class="btn btn-primary">
                                            <i class="fa fa-eye"></i>
                                        </a>
                                        <a href="@Url.Action("EditState", "States",new {stateId=state.StateId})" class="btn btn-warning">
                                            <i class="fa fa-edit" aria-hidden="true"></i>
                                        </a>
                                        <a href="@Url.Action("DeleteState", "States",new {stateId=state.StateId})" class="btn btn-danger">
                                            <i class="fa fa-trash-can" aria-hidden="true"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }

            @if (@ViewBag.ShowPagination == true)
            {

                <br />
                <div id='Paging' style="text-align:center;" class="text-light bg-dark paging">
                    <span>
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
                        of @Model.PageCount
                    </span>
                </div>

                <br />
                <div class="text-light bg-dark">
                    <div class="row">
                        <div class="col-md-12">
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>